{"version":3,"sources":["utils/useFetch.ts","actions/userActions.ts","types/actions/ErrorActions.ts","types/actions/UserActions.ts","reducers/errorReducer.ts","reducers/userReducer.ts","reducers/postReducer.ts","reducers/profileReducer.ts","store/configureStore.ts","types/actions/PostActions.ts","types/actions/ProfileActions.ts","actions/profileActions.ts","components/Search/SearchForm.tsx","components/Layout/Header.tsx","actions/postActions.ts","components/Post/AddPost.tsx","components/Layout/Footer.tsx","components/Layout/Main.tsx","components/Auth/Login.tsx","components/Post/Comment.tsx","components/Post/Post.tsx","components/Post/LoadingPosts.tsx","components/Post/ListPosts.tsx","components/Routes/Home.tsx","components/Routes/Followed.tsx","components/Routes/NotFound.tsx","components/Auth/Register.tsx","components/Profile/Profile.tsx","components/Search/NotFound.tsx","router/index.tsx","App.tsx","index.tsx"],"names":["headers","Headers","set","method","url","data","isFormData","a","body","JSON","stringify","fetch","response","json","console","error","API_URL","process","registerUser","userData","history","dispatch","useFetch","then","success","push","type","errors","catch","err","loginUser","token","expiresIn","localStorage","setItem","append","res","user","logoutUser","removeItem","delete","window","location","href","errorReducerDefaultState","userReducerDefaultState","isAuthenticated","postReducerDefaultState","posts","loading","profileReducerDefaultState","rootReducer","combineReducers","state","action","post","map","_id","filter","id","comment","postId","comments","profile","followers","userId","store","createStore","composeWithDevTools","applyMiddleware","thunk","getProfile","refresh","loadingProfile","log","searchProfile","text","_err","followProfile","profileId","unfollowProfile","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","width","breakpoints","up","margin","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","connect","bindActionCreators","useHistory","classes","className","InputBase","placeholder","root","input","onKeyPress","e","searchData","target","value","key","flexGrow","logo","fontSize","textTransform","space","ColorButton","withStyles","spacing","getContrastText","indigo","Button","useState","anchorEl","setAnchorEl","handleClose","open","Boolean","guestLinks","to","variant","authLinks","IconButton","aria-owns","undefined","aria-haspopup","onClick","currentTarget","AccountCircle","Menu","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem","AppBar","Toolbar","alt","src","style","addPost","postData","camera","description","files","formData","FormData","getPosts","loadingPosts","concat","getPostsByFollowedUsers","deletePost","updatePostRating","addComment","commentData","container","textAlign","addBtn","left","bottom","transform","padding","zIndex","dialogContent","marginBottom","detailsInput","descriptionInput","initialPostInputState","setOpen","postInput","setPostInput","handleInputChange","name","Tooltip","title","aria-label","Fab","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","label","autoFocus","onChange","InputProps","startAdornment","InputAdornment","fullWidth","multiline","rowsMax","filesLimit","acceptedFiles","maxFileSize","DialogActions","appBar","maxHeight","top","link","textDecoration","AddPost","Box","boxShadow","role","Main","children","Grid","direction","alignContent","paper","maxWidth","textField","btnBlock","marginTop","registerLink","email","password","loginInfo","setLoginInfo","useEffect","handleChange","Paper","onSubmit","preventDefault","autoComplete","helperText","minHeight","overflowWrap","wordWrap","wordBreak","hyphens","userDetails","colorBand","minWidth","time","message","createdAt","slice","length","username","moment","fromNow","createStyles","item","cardHeader","alignSelf","userProfile","media","detailsBox","details","cardDropdown","cardContent","expand","duration","shortest","expandOpen","commentContainer","commentInput","confirm","useConfirm","filePath","rating","postUserId","currentUserId","overallRating","postRating","setPostRating","expanded","setExpanded","setCommentInput","anchorRef","useRef","current","contains","handleRatingChange","_e","newRating","deleteBtn","size","xs","sm","md","lg","Card","CardHeader","avatar","Avatar","substr","subheader","CardMedia","image","substring","CardContent","Typography","CardActions","disableSpacing","toFixed","totalRating","ref","aria-controls","prevOpen","startIcon","Popper","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","Rating","max","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","idx","Date","load","loadIcon","LoadingPosts","CircularProgress","allPosts","items","justify","NotFound","confirmPassword","registerInfo","setRegisterInfo","detailsBlock","detail","fontWeight","detailTitle","btnFollow","outline","borderColor","loader","useParams","profileInfo","followBtn","following","includes","AppRouter","exact","path","component","Home","Followed","Login","Register","Profile","Search","from","jwt","getItem","currentTime","now","parse","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.af0bba61.chunk.js","sourcesContent":["export const headers = new Headers();\r\nheaders.set(\"Content-Type\", \"application/json\");\r\n\r\nexport default async (method: string, url: string, data?: any, isFormData?: boolean) => {\r\n  try {\r\n    const body = isFormData ? data : JSON.stringify(data);\r\n    const response = await fetch(url, { method, headers, body });\r\n    return response.json();\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL as string;","import { Dispatch } from \"redux\";\r\n\r\nimport { User } from \"../types/User\";\r\nimport { SET_USER } from \"../types/actions/UserActions\";\r\nimport { GET_ERRORS } from \"../types/actions/ErrorActions\";\r\nimport { AppActions } from \"../types/actions\";\r\n\r\nimport useFetch, { headers, API_URL } from \"../utils/useFetch\";\r\n\r\nexport const registerUser = (userData: User, history: any) => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"POST\", API_URL + \"/users/register\", userData)\r\n    .then(data => {\r\n      if (data.success) {\r\n        history.push(\"/image-board/login\");\r\n      } else {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          errors: data.errors\r\n        });\r\n      }\r\n    })\r\n    .catch(err => dispatch({\r\n      type: GET_ERRORS,\r\n      errors: err\r\n    }));\r\n}\r\n\r\nexport const loginUser = (userData: User) => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"POST\", API_URL + \"/users/login\", userData)\r\n    .then(data => {\r\n      if (data.success) {\r\n        // store jwt in local storage\r\n        const { token, expiresIn } = data;\r\n        localStorage.setItem(\"jwt\", JSON.stringify({ token, expiresIn }));\r\n\r\n        // set current user\r\n        headers.append(\"Authorization\", token);\r\n        useFetch(\"GET\", API_URL + \"/users\")\r\n          .then(res => dispatch({\r\n            type: SET_USER,\r\n            user: res.user\r\n          }));\r\n      } else {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          errors: data.errors\r\n        })\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        errors: err\r\n      })\r\n    });\r\n}\r\n\r\nexport const logoutUser = () => (dispatch: Dispatch<AppActions>) => {\r\n  localStorage.removeItem(\"jwt\");\r\n  headers.delete(\"Authorization\");\r\n  dispatch({\r\n    type: SET_USER,\r\n    user: {}\r\n  });\r\n  window.location.href = \"/image-board/\";\r\n}\r\n\r\nexport const setUser = () => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"GET\", API_URL + \"/users\")\r\n    .then(data => {\r\n      if (data.success)\r\n        dispatch({\r\n          type: SET_USER,\r\n          user: data.user\r\n        })\r\n    })\r\n}\r\n","import { Errors } from \"../Error\";\r\n\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport interface GetErrorAction {\r\n  type: typeof GET_ERRORS;\r\n  errors: Errors;\r\n}\r\n\r\nexport type ErrorActionTypes = GetErrorAction;","import { User } from \"../User\";\r\n\r\nexport const SET_USER = \"SET_USER\";\r\n\r\nexport interface SetUserAction {\r\n    type: typeof SET_USER;\r\n    user: User;\r\n}\r\n\r\nexport type UserActionTypes = SetUserAction;\r\n","import { Errors } from \"../types/Error\";\r\nimport {\r\n  ErrorActionTypes,\r\n  GET_ERRORS,\r\n} from \"../types/actions/ErrorActions\";\r\n\r\nconst errorReducerDefaultState: Errors = {};\r\n\r\nconst errorReducer = (state = errorReducerDefaultState, action: ErrorActionTypes): Errors => {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.errors\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { errorReducer };","import { User } from \"../types/User\";\r\nimport {\r\n  UserActionTypes,\r\n  SET_USER,\r\n} from \"../types/actions/UserActions\";\r\n\r\ninterface UserState {\r\n  user: User,\r\n  isAuthenticated: boolean,\r\n}\r\n\r\nconst userReducerDefaultState: UserState = {\r\n  user: {},\r\n  isAuthenticated: false\r\n};\r\n\r\nconst userReducer = (\r\n  state = userReducerDefaultState,\r\n  action: UserActionTypes\r\n): UserState => {\r\n\r\n  switch (action.type) {\r\n\r\n    case SET_USER:\r\n      return {\r\n        isAuthenticated: true,\r\n        user: action.user\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { userReducer };","import { Post } from \"../types/Post\";\r\nimport {\r\n  PostActionTypes,\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  LOADING_POSTS,\r\n  UPDATE_POST,\r\n  DELETE_POST,\r\n  ADD_COMMENT\r\n} from \"../types/actions/PostActions\";\r\n\r\ninterface PostState {\r\n  posts: Post[],\r\n  loading: boolean\r\n}\r\n\r\nconst postReducerDefaultState: PostState = {\r\n  posts: [],\r\n  loading: false\r\n}\r\n\r\nconst postReducer = (\r\n  state = postReducerDefaultState,\r\n  action: PostActionTypes\r\n): PostState => {\r\n  switch (action.type) {\r\n\r\n    case ADD_POST:\r\n      return {\r\n        posts: [action.post, ...state.posts],\r\n        loading: false\r\n      };\r\n\r\n    case GET_POSTS:\r\n      return {\r\n        posts: action.posts,\r\n        loading: false,\r\n      };\r\n\r\n    case LOADING_POSTS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case UPDATE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => {\r\n          if (post._id === action.post._id)\r\n            return action.post;\r\n          else\r\n            return post;\r\n        }),\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== action.id),\r\n      };\r\n\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => {\r\n          if (post._id === action.comment.postId) {\r\n            const comments = post.comments || [];\r\n            return { ...post, comments: [...comments, action.comment] };\r\n          } else\r\n            return post;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport { postReducer };","import { User } from \"../types/User\";\r\nimport {\r\n  ProfileActionTypes,\r\n  GET_PROFILE,\r\n  LOADING_PROFILE,\r\n  FOLLOW_PROFILE,\r\n  UNFOLLOW_PROFILE,\r\n} from \"../types/actions/ProfileActions\";\r\n\r\ninterface ProfileState {\r\n  user: User,\r\n  loading: boolean\r\n}\r\n\r\nconst profileReducerDefaultState: ProfileState = {\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nconst profileReducer = (\r\n  state = profileReducerDefaultState,\r\n  action: ProfileActionTypes\r\n): ProfileState => {\r\n\r\n  switch (action.type) {\r\n    case GET_PROFILE:\r\n      return {\r\n        user: action.user,\r\n        loading: false\r\n      };\r\n\r\n    case LOADING_PROFILE:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case FOLLOW_PROFILE:\r\n      const followers = state.user.followers || [];\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          followers: [...followers, action.id]\r\n        },\r\n      };\r\n\r\n    case UNFOLLOW_PROFILE:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          followers: state.user.followers ? state.user.followers.filter((userId: string) => userId !== action.id) : []\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { profileReducer };","import { combineReducers, createStore, applyMiddleware } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\r\n\r\nimport { errorReducer } from \"../reducers/errorReducer\";\r\nimport { userReducer } from \"../reducers/userReducer\";\r\nimport { postReducer } from \"../reducers/postReducer\";\r\nimport { profileReducer } from \"../reducers/profileReducer\";\r\nimport { AppActions } from \"../types/actions\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  errors: errorReducer,\r\n  user: userReducer,\r\n  post: postReducer,\r\n  profile: profileReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk as ThunkMiddleware<AppState, AppActions>)\r\n  )\r\n);","import { Post } from \"../Post\";\r\nimport { Comment } from \"../Comment\";\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const LOADING_POSTS = \"LOADING_POSTS\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\nexport interface AddPostAction {\r\n  type: typeof ADD_POST;\r\n  post: Post;\r\n}\r\n\r\nexport interface GetPostAction {\r\n  type: typeof GET_POSTS;\r\n  posts: Post[];\r\n}\r\n\r\nexport interface LoadingPostAction {\r\n  type: typeof LOADING_POSTS;\r\n}\r\n\r\nexport interface UpdatePostAction {\r\n  type: typeof UPDATE_POST;\r\n  post: Post;\r\n}\r\n\r\nexport interface DeletePostAction {\r\n  type: typeof DELETE_POST;\r\n  id: string;\r\n}\r\n\r\nexport interface AddCommentAction {\r\n  type: typeof ADD_COMMENT;\r\n  comment: Comment;\r\n}\r\n\r\nexport type PostActionTypes = AddPostAction | GetPostAction | LoadingPostAction | UpdatePostAction | DeletePostAction | AddCommentAction;","import { User } from \"../User\";\r\n\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const LOADING_PROFILE = \"LOADING_PROFILE\";\r\nexport const FOLLOW_PROFILE = \"FOLLOW_PROFILE\";\r\nexport const UNFOLLOW_PROFILE = \"UNFOLLOW_PROFILE\";\r\n\r\nexport interface GetProfileAction {\r\n  type: typeof GET_PROFILE;\r\n  user: User;\r\n}\r\n\r\nexport interface LoadingProfileAction {\r\n  type: typeof LOADING_PROFILE;\r\n}\r\n\r\nexport interface FollowProfileAction {\r\n  type: typeof FOLLOW_PROFILE;\r\n  id: string;\r\n}\r\n\r\nexport interface UnfollowProfileAction {\r\n  type: typeof UNFOLLOW_PROFILE;\r\n  id: string;\r\n}\r\n\r\nexport type ProfileActionTypes = GetProfileAction | LoadingProfileAction | FollowProfileAction | UnfollowProfileAction;\r\n","import { Dispatch } from \"redux\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  LOADING_PROFILE,\r\n  FOLLOW_PROFILE,\r\n  UNFOLLOW_PROFILE\r\n} from \"../types/actions/ProfileActions\";\r\nimport { AppActions } from \"../types/actions\";\r\n\r\nimport useFetch, { API_URL } from \"../utils/useFetch\";\r\n\r\nexport const getProfile = (userId: string, refresh?: boolean) => (dispatch: Dispatch<AppActions>) => {\r\n  if (!refresh)\r\n    dispatch(loadingProfile());\r\n\r\n  useFetch(\"GET\", API_URL + `/users/${userId}`)\r\n    .then(data => dispatch({\r\n      type: GET_PROFILE,\r\n      user: data.user\r\n    }))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const searchProfile = (text: string, history: any) => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"POST\", API_URL + \"/users/search\", { text })\r\n    .then(data => {\r\n      if (data.success)\r\n        history.push(`/image-board/profile/${data.userId}`);\r\n      else\r\n        history.push(\"/image-board/search\");\r\n    })\r\n    .catch(_err => history.push(\"/image-board/search\"));\r\n}\r\n\r\nexport const loadingProfile = (): AppActions => {\r\n  return {\r\n    type: LOADING_PROFILE\r\n  };\r\n}\r\n\r\nexport const followProfile = (profileId: string) => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"POST\", API_URL + \"/users/follow\", { profileId })\r\n    .then(data => dispatch({\r\n      type: FOLLOW_PROFILE,\r\n      id: data.userId\r\n    }))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const unfollowProfile = (profileId: string) => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"POST\", API_URL + \"/users/unfollow\", { profileId })\r\n    .then(data => dispatch({\r\n      type: UNFOLLOW_PROFILE,\r\n      id: data.userId\r\n    }))\r\n    .catch(err => console.log(err));\r\n}\r\n","import React from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { InputBase, makeStyles } from \"@material-ui/core\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport { searchProfile } from \"../../actions/profileActions\";\r\n\r\nimport { AppActions } from \"../../types/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: 50,\r\n    marginLeft: 50,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: \"0px auto\",\r\n      width: \"40%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: \"0px auto\",\r\n      width: \"30%\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: 35,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    paddingTop: 7,\r\n    paddingRight: 7,\r\n    paddingBottom: 7,\r\n    paddingLeft: 35,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\ntype Props = LinkDispatchProps;\r\n\r\nconst SearchForm: React.FC<Props> = ({ searchProfile }) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleKeypress = (e: any) => {\r\n    const searchData: { text: string } = {\r\n      text: e.target.value,\r\n    };\r\n\r\n    if (e.key === \"Enter\") {\r\n      searchProfile(searchData.text, history);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search user\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        onKeyPress={handleKeypress}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface LinkDispatchProps {\r\n  searchProfile: (searchData: string, history: any) => void;\r\n}\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  searchProfile: bindActionCreators(searchProfile, dispatch),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchForm);\r\n","import React, { useState } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  withStyles,\r\n  Theme,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport { indigo } from \"@material-ui/core/colors\";\r\n\r\nimport SearchForm from \"../Search/SearchForm\";\r\n\r\nimport { logoutUser } from \"../../actions/userActions\";\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nimport { User } from \"../../types/User\";\r\nimport { AppActions } from \"../../types/actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    color: \"#fff\",\r\n    fontSize: 30,\r\n    textTransform: \"uppercase\",\r\n  },\r\n  space: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n\r\nconst ColorButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n    color: theme.palette.getContrastText(indigo[700]),\r\n    backgroundColor: indigo[700],\r\n    \"&:hover\": {\r\n      backgroundColor: indigo[800],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\ntype Props = LinkStateProps & LinkDispatchProps;\r\n\r\nconst Header: React.FC<Props> = ({ logoutUser, isAuthenticated, user }) => {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] =\r\n    useState<(EventTarget & HTMLButtonElement) | null>(null);\r\n\r\n  const handleMenu = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => setAnchorEl(null);\r\n\r\n  const handleLogout = () => {\r\n    setAnchorEl(null);\r\n    logoutUser();\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const guestLinks = (\r\n    <div>\r\n      <Link to=\"/image-board/register\">\r\n        <ColorButton variant=\"contained\">Sign Up</ColorButton>\r\n      </Link>\r\n      <Link to=\"/image-board/login\">\r\n        <ColorButton variant=\"contained\">Log In</ColorButton>\r\n      </Link>\r\n    </div>\r\n  );\r\n\r\n  const authLinks = (\r\n    <div>\r\n      <IconButton\r\n        aria-owns={open ? \"menu-appbar\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        color=\"inherit\"\r\n        onClick={handleMenu}\r\n      >\r\n        <AccountCircle />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        open={open}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n      >\r\n        <Link to={`/image-board/profile/${user._id}`}>\r\n          <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        </Link>\r\n        <Link to=\"/image-board/followed\">\r\n          <MenuItem onClick={handleClose}>Followed</MenuItem>\r\n        </Link>\r\n        <Link to=\"/image-board/\" onClick={handleLogout}>\r\n          <MenuItem>Log Out</MenuItem>\r\n        </Link>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar color=\"primary\" position=\"static\">\r\n        <Toolbar className={classes.space}>\r\n          <Link to=\"/image-board/\" className={classes.logo}>\r\n            <img alt=\"logo\" src=\"camera_logo.png\" style={{ width: 40 }} />\r\n          </Link>\r\n          {isAuthenticated && <SearchForm />}\r\n          {isAuthenticated ? authLinks : guestLinks}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface LinkStateProps {\r\n  isAuthenticated: boolean;\r\n  user: User;\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  logoutUser: () => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): LinkStateProps => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n  user: state.user.user,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  logoutUser: bindActionCreators(logoutUser, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import { Dispatch } from \"redux\";\r\n\r\nimport { Post } from \"../types/Post\";\r\nimport { Comment } from \"../types/Comment\";\r\nimport {\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  LOADING_POSTS,\r\n  UPDATE_POST,\r\n  ADD_COMMENT,\r\n  DELETE_POST\r\n} from \"../types/actions/PostActions\";\r\n\r\nimport { AppActions } from \"../types/actions\";\r\n\r\nimport useFetch, { headers, API_URL } from \"../utils/useFetch\";\r\n\r\nexport const addPost = (postData: Post) => (dispatch: Dispatch<AppActions>) => {\r\n  headers.delete(\"Content-Type\");\r\n\r\n  const { camera, location, description, files } = postData;\r\n\r\n  if (camera && location && description && files) {\r\n    let formData = new FormData();\r\n    formData.append(\"camera\", camera);\r\n    formData.append(\"location\", location);\r\n    formData.append(\"description\", description);\r\n    formData.append('file', files[0]);\r\n\r\n    useFetch(\"POST\", API_URL + \"/posts/add\", formData, true)\r\n      .then(data => {\r\n        headers.set(\"Content-Type\", \"application/json\");\r\n        dispatch({\r\n          type: ADD_POST,\r\n          post: data.post\r\n        });\r\n      })\r\n      .catch(err => {\r\n        headers.set(\"Content-Type\", \"application/json\");\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n\r\nexport const getPosts = (userId?: string) => (dispatch: Dispatch<AppActions>) => {\r\n  dispatch(loadingPosts());\r\n\r\n  const url = API_URL.concat(\"/posts\", userId ? `/${userId}` : \"\");\r\n\r\n  useFetch(\"GET\", url)\r\n    .then(data => dispatch({\r\n      type: GET_POSTS,\r\n      posts: data.posts\r\n    }))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const getPostsByFollowedUsers = () => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"GET\", API_URL + \"/posts/following\")\r\n    .then(data => dispatch({\r\n      type: GET_POSTS,\r\n      posts: data.posts\r\n    }))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const deletePost = (postId: string) => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"DELETE\", API_URL + \"/posts/delete\", { postId })\r\n    .then(data => dispatch({\r\n      type: DELETE_POST,\r\n      id: data.post._id\r\n    }))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const loadingPosts = (): AppActions => {\r\n  return {\r\n    type: LOADING_POSTS\r\n  }\r\n}\r\n\r\nexport const updatePostRating = (postData: { _id: string, rating: number }) => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"PUT\", API_URL + \"/posts/rating\", postData)\r\n    .then(data => dispatch({\r\n      type: UPDATE_POST,\r\n      post: data.post\r\n    }))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const addComment = (commentData: Comment) => (dispatch: Dispatch<AppActions>) => {\r\n  useFetch(\"POST\", API_URL + \"/posts/comment\", commentData)\r\n    .then(data => dispatch({\r\n      type: ADD_COMMENT,\r\n      comment: data.comment\r\n    }))\r\n    .catch(err => console.log(err));\r\n}","import React, { useState } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  InputAdornment,\r\n  Tooltip,\r\n  Fab,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CameraAlt from \"@material-ui/icons/CameraAlt\";\r\nimport Location from \"@material-ui/icons/LocationOn\";\r\nimport Description from \"@material-ui/icons/Description\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\n\r\nimport { addPost } from \"../../actions/postActions\";\r\n\r\nimport { Post } from \"../../types/Post\";\r\nimport { AppActions } from \"../../types/actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: \"center\",\r\n  },\r\n  addBtn: {\r\n    position: \"fixed\",\r\n    left: \"50%\",\r\n    bottom: 15,\r\n    transform: \"translateX(-50%)\",\r\n    padding: 30,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    zIndex: 10000,\r\n  },\r\n  dialogContent: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 10,\r\n  },\r\n  detailsInput: {\r\n    width: \"47%\",\r\n  },\r\n  descriptionInput: {\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\ninterface PostInput {\r\n  camera: string;\r\n  location: string;\r\n  description: string;\r\n  files: File[];\r\n}\r\n\r\ntype Props = LinkDispatchProps;\r\n\r\nconst TestPost: React.FC<Props> = ({ addPost }) => {\r\n  const classes = useStyles();\r\n\r\n  const initialPostInputState: PostInput = {\r\n    camera: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    files: [],\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [postInput, setPostInput] = useState<PostInput>(initialPostInputState);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  const handleClose = () => {\r\n    setPostInput(initialPostInputState);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPostInput({\r\n      ...postInput,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDropzoneChange = (files: File[]) => {\r\n    setPostInput({\r\n      ...postInput,\r\n      files,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    addPost(postInput);\r\n    setPostInput(initialPostInputState);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Tooltip\r\n        title=\"Post your own picture\"\r\n        aria-label=\"add\"\r\n      >\r\n        <Fab color=\"primary\" onClick={handleOpen} className={classes.addBtn}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        style={{ zIndex: 10001 }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Post a picture</DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.dialogContent}>\r\n            <TextField\r\n              label=\"Camera\"\r\n              name=\"camera\"\r\n              autoFocus\r\n              className={classes.detailsInput}\r\n              id=\"input-camera\"\r\n              onChange={handleInputChange}\r\n              value={postInput.camera}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <CameraAlt />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Location\"\r\n              name=\"location\"\r\n              className={classes.detailsInput}\r\n              id=\"input-lense\"\r\n              onChange={handleInputChange}\r\n              value={postInput.location}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Location />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <TextField\r\n            label=\"Description\"\r\n            fullWidth\r\n            multiline\r\n            rowsMax=\"4\"\r\n            name=\"description\"\r\n            className={classes.descriptionInput}\r\n            id=\"input-description\"\r\n            onChange={handleInputChange}\r\n            value={postInput.description}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Description />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <DropzoneArea\r\n            onChange={handleDropzoneChange}\r\n            filesLimit={1}\r\n            acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}\r\n            maxFileSize={5000000}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface LinkDispatchProps {\r\n  addPost: (postData: Post) => void;\r\n}\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  addPost: bindActionCreators(addPost, dispatch),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(TestPost);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, AppBar, Toolbar, makeStyles } from \"@material-ui/core\";\r\n\r\nimport AddPost from \"../Post/AddPost\";\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: 20,\r\n  },\r\n  appBar: {\r\n    maxHeight: 40,\r\n    justifyContent: \"center\",\r\n    top: \"auto\",\r\n    bottom: 0,\r\n    backgroundColor: \"#eee\",\r\n    color: \"#444\",\r\n  },\r\n  link: {\r\n    textDecoration: \"underline\",\r\n    color: \"#444\",\r\n  },\r\n});\r\n\r\ntype Props = LinkStateProps;\r\n\r\nconst Footer: React.FC<Props> = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated && <AddPost />}\r\n      <Box className={classes.root} boxShadow={3}>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <span>\r\n              Made with{\" \"}\r\n              <span role=\"img\" aria-label=\"coffee\">\r\n                ☕\r\n              </span>{\" \"}\r\n              by{\" \"}\r\n              <a className={classes.link} href=\"https://patrickbecker.me\">\r\n                Patrick Becker\r\n              </a>\r\n            </span>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface LinkStateProps {\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): LinkStateProps => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Main: React.FC<{ children: React.ReactElement }> = ({ children }) => (\r\n  <div>\r\n    <Header />\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignContent=\"center\"\r\n      style={{ padding: 25 }}\r\n    >\r\n      {children}\r\n    </Grid>\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { Paper, TextField, Button, makeStyles } from \"@material-ui/core\";\r\n\r\nimport { loginUser } from \"../../actions/userActions\";\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nimport { User } from \"../../types/User\";\r\nimport { Errors } from \"../../types/Error\";\r\nimport { AppActions } from \"../../types/actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    maxWidth: 500,\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    margin: 0,\r\n    color: \"#3F51B5\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n    marginBottom: 5,\r\n  },\r\n  btnBlock: {\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n    marginTop: 20,\r\n  },\r\n  registerLink: {\r\n    marginBottom: 0,\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\ntype Props = LinkStateProps & LinkDispatchProps;\r\n\r\nconst Login: React.FC<Props> = ({ loginUser, isAuthenticated, errors }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [loginInfo, setLoginInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/image-board/\");\r\n    }\r\n  }, [isAuthenticated, history]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLoginInfo({ ...loginInfo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    loginUser(loginInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.paper}>\r\n        <h2 className={classes.title}>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            autoComplete=\"username\"\r\n            className={classes.textField}\r\n            value={loginInfo.email}\r\n            onChange={handleChange}\r\n            name=\"email\"\r\n            helperText={errors.email ? errors.email : \"\"}\r\n            error={errors.email ? true : false}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            name=\"password\"\r\n            value={loginInfo.password}\r\n            onChange={handleChange}\r\n            className={classes.textField}\r\n            helperText={errors.password ? errors.password : \"\"}\r\n            error={errors.password ? true : false}\r\n          />\r\n          <div className={classes.btnBlock}>\r\n            <Button variant=\"outlined\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <p className={classes.registerLink}>\r\n          Not registered? <Link to=\"/image-board/register\">Sign up now</Link>.\r\n        </p>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface LinkStateProps {\r\n  isAuthenticated: boolean;\r\n  errors: Errors;\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  loginUser: (userData: User) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): LinkStateProps => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n  errors: state.errors,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  loginUser: bindActionCreators(loginUser, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Paper, makeStyles } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nimport { Comment } from \"../../types/Comment\";\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    minHeight: 60,\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 10,\r\n    overflowWrap: \"break-word\",\r\n    wordWrap: \"break-word\",\r\n    wordBreak: \"break-word\",\r\n    hyphens: \"auto\",\r\n  },\r\n  userDetails: {\r\n    wordWrap: \"break-word\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  colorBand: {\r\n    minWidth: 10,\r\n    margin: \"4px 10px 4px 4px\",\r\n  },\r\n  user: {\r\n    marginTop: 0,\r\n    marginBottom: 10,\r\n  },\r\n  time: {\r\n    marginLeft: 10,\r\n    color: \"#bbb\",\r\n    fontSize: 12,\r\n  },\r\n});\r\n\r\ninterface SingleCommentProps {\r\n  comment: Comment;\r\n}\r\n\r\ntype Props = SingleCommentProps;\r\n\r\nconst SingleComment: React.FC<Props> = ({ comment }) => {\r\n  const classes = useStyles();\r\n\r\n  const { message, createdAt } = comment;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.userDetails}>\r\n        <div\r\n          className={classes.colorBand}\r\n          style={{\r\n            backgroundColor: `#${\r\n              comment.user &&\r\n              comment.user._id &&\r\n              comment.user._id.slice(comment.user._id.length - 3)\r\n            }`,\r\n          }}\r\n        />\r\n        <div>\r\n          <h3 className={classes.user}>\r\n            <Link\r\n              to={`/image-board/profile/${comment.user && comment.user._id}`}\r\n            >\r\n              {comment.user && comment.user.username}\r\n            </Link>\r\n            <span className={classes.time}>{moment(createdAt).fromNow()}</span>\r\n          </h3>\r\n          {message}\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default connect(null)(SingleComment);\r\n","import React, { useState, useRef } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\nimport { useConfirm } from \"material-ui-confirm\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Tooltip,\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Collapse,\r\n  Avatar,\r\n  TextField,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Popper,\r\n  Grow,\r\n  Grid,\r\n  Paper,\r\n  ClickAwayListener,\r\n  MenuList,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport CameraAlt from \"@material-ui/icons/CameraAlt\";\r\nimport Location from \"@material-ui/icons/LocationOn\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Star from \"@material-ui/icons/Star\";\r\nimport Send from \"@material-ui/icons/Send\";\r\n\r\nimport SingleComment from \"./Comment\";\r\n\r\nimport {\r\n  updatePostRating,\r\n  deletePost,\r\n  addComment,\r\n} from \"../../actions/postActions\";\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nimport { Post } from \"../../types/Post\";\r\nimport { User } from \"../../types/User\";\r\nimport { AppActions } from \"../../types/actions\";\r\nimport { Comment } from \"../../types/Comment\";\r\n\r\nimport { API_URL } from \"../../utils/useFetch\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: \"#fafafa\",\r\n      marginBottom: 30,\r\n    },\r\n    item: {\r\n      flexGrow: 1,\r\n      maxWidth: 800,\r\n    },\r\n    cardHeader: {\r\n      padding: 10,\r\n      paddingLeft: 15,\r\n    },\r\n    action: {\r\n      alignSelf: \"center\",\r\n      margin: 0,\r\n    },\r\n    userProfile: {\r\n      margin: 0,\r\n    },\r\n    link: {\r\n      color: \"#666\",\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: \"56.25%\", // 16:9\r\n      marginBottom: 10,\r\n    },\r\n    detailsBox: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignContent: \"bottom\",\r\n    },\r\n    details: {\r\n      display: \"flex\",\r\n      paddingTop: 10,\r\n    },\r\n    cardDropdown: {\r\n      fontSize: 16,\r\n      paddingLeft: 16,\r\n    },\r\n    cardContent: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    expand: {\r\n      transform: \"rotate(0deg)\",\r\n      marginLeft: \"auto\",\r\n      transition: theme.transitions.create(\"transform\", {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: \"rotate(180deg)\",\r\n    },\r\n    commentContainer: {\r\n      display: \"flex\",\r\n      backgroundColor: \"#fff\",\r\n      padding: \"10px 2px 5px 10px\",\r\n      borderRadius: 5,\r\n      marginTop: 20,\r\n      boxShadow:\r\n        \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n    },\r\n    comments: {\r\n      paddingTop: 0,\r\n    },\r\n    commentInput: {\r\n      width: \"100%\",\r\n      marginBottom: 5,\r\n    },\r\n  })\r\n);\r\n\r\ninterface SinglePostProps {\r\n  post: Post;\r\n}\r\n\r\ntype Props = SinglePostProps & LinkStateProps & LinkDispatchProps;\r\n\r\nconst SinglePost: React.FC<Props> = ({\r\n  isAuthenticated,\r\n  user,\r\n  post,\r\n  updatePostRating,\r\n  deletePost,\r\n  addComment,\r\n}) => {\r\n  const confirm = useConfirm();\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    camera,\r\n    location,\r\n    description,\r\n    filePath,\r\n    rating,\r\n    comments,\r\n    createdAt,\r\n  } = post;\r\n  const { _id } = post;\r\n  const username = post?.user?.username;\r\n  const postUserId = post?.user?._id;\r\n  const currentUserId = user._id;\r\n\r\n  const [postRating, setPostRating] = useState<number | null>(\r\n    rating ? rating.overallRating : null\r\n  );\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [commentInput, setCommentInput] = useState(\"\");\r\n\r\n  const anchorRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const handleDelete = (\r\n    _e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    confirm({ description: \"This will permanently delete your post.\" })\r\n      .then(() => _id && deletePost(_id))\r\n      .catch(() => console.log(\"Deletion cancelled.\"));\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (e: React.MouseEvent<EventTarget>) => {\r\n    if (\r\n      anchorRef.current &&\r\n      anchorRef.current.contains(e.target as HTMLElement)\r\n    )\r\n      return;\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRatingChange = (\r\n    _e: React.ChangeEvent<{}>,\r\n    newRating: number | null\r\n  ) => {\r\n    setPostRating(newRating);\r\n\r\n    if (_id && newRating !== null) updatePostRating({ _id, rating: newRating });\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCommentInput(e.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    addComment({\r\n      postId: _id,\r\n      user,\r\n      message: commentInput,\r\n      createdAt: new Date(),\r\n    });\r\n    setCommentInput(\"\");\r\n  };\r\n\r\n  const deleteBtn = (\r\n    <Tooltip title=\"Delete post\">\r\n      <IconButton size=\"small\" aria-label=\"delete\" onClick={handleDelete}>\r\n        <DeleteIcon style={{ margin: 4 }} />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <Grid item xs={12} sm={10} md={6} lg={4} className={classes.item}>\r\n      <Card className={classes.root}>\r\n        {/* card header with avatar, username and the upload date */}\r\n        <CardHeader\r\n          className={classes.cardHeader}\r\n          classes={{ action: classes.action }}\r\n          avatar={\r\n            <Avatar\r\n              alt={username}\r\n              aria-label=\"post\"\r\n              style={{\r\n                display: \"inline-flex\",\r\n                backgroundColor: `#${\r\n                  postUserId && postUserId.slice(postUserId.length - 3)\r\n                }`,\r\n                padding: 4,\r\n                fontSize: 20,\r\n              }}\r\n            >\r\n              {username?.substr(0, 1)}\r\n            </Avatar>\r\n          }\r\n          action={isAuthenticated && postUserId === currentUserId && deleteBtn}\r\n          title={\r\n            <h3 className={classes.userProfile}>\r\n              <Link\r\n                className={classes.link}\r\n                to={`/image-board/profile/${postUserId}`}\r\n              >\r\n                {username}\r\n              </Link>\r\n            </h3>\r\n          }\r\n          subheader={moment(createdAt).fromNow()}\r\n        />\r\n\r\n        {/* the image */}\r\n        <CardMedia\r\n          image={API_URL.substring(0, API_URL.length - 4) + filePath}\r\n          className={classes.media}\r\n        />\r\n\r\n        {/* image description, location and camera */}\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            style={{ marginBottom: 10 }}\r\n          >\r\n            {description}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            color=\"textSecondary\"\r\n            className={classes.detailsBox}\r\n          >\r\n            {camera && (\r\n              <span className={classes.details}>\r\n                <Tooltip title=\"Camera used to take the picture\">\r\n                  <CameraAlt fontSize=\"small\" style={{ marginRight: 5 }} />\r\n                </Tooltip>\r\n                {camera}\r\n              </span>\r\n            )}\r\n\r\n            {location && (\r\n              <span className={classes.details}>\r\n                <Tooltip title=\"Location where the picture was taken\">\r\n                  <Location fontSize=\"small\" style={{ marginRight: 5 }} />\r\n                </Tooltip>\r\n                {location}\r\n              </span>\r\n            )}\r\n          </Typography>\r\n        </CardContent>\r\n        <div style={{ height: \"1px\", backgroundColor: \"#999\" }} />\r\n\r\n        {/* overall rating and rating input */}\r\n        <CardActions disableSpacing className={classes.cardDropdown}>\r\n          <Tooltip\r\n            title={`${rating?.overallRating?.toFixed(1)} based on \r\n                    ${rating?.totalRating} user ratings`}\r\n          >\r\n            <Star style={{ color: \"gold\", marginRight: 3 }} />\r\n          </Tooltip>\r\n          {rating?.overallRating?.toFixed(1)}\r\n          <Tooltip title=\"Rate this post\">\r\n            <Button\r\n              ref={anchorRef}\r\n              aria-controls={open ? \"menu-list-grow\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              style={{ marginLeft: 10 }}\r\n              onClick={handleToggle}\r\n              startIcon={<StarBorder />}\r\n            >\r\n              Rate post\r\n            </Button>\r\n          </Tooltip>\r\n          <Popper\r\n            open={open}\r\n            anchorEl={anchorRef.current}\r\n            role={undefined}\r\n            transition\r\n            disablePortal\r\n          >\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                style={{\r\n                  transformOrigin:\r\n                    placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={handleClose}>\r\n                    <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                      <MenuItem onClick={handleClose}>\r\n                        <Rating\r\n                          max={10}\r\n                          name=\"post-rating\"\r\n                          value={postRating}\r\n                          onChange={handleRatingChange}\r\n                        />\r\n                      </MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n          <Tooltip title=\"Show and add comments\">\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </CardActions>\r\n\r\n        {/* Dropdown with comment section */}\r\n        <Collapse\r\n          in={expanded}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n          className={classes.cardContent}\r\n        >\r\n          <CardContent className={classes.comments}>\r\n            {/* render comments */}\r\n            {comments?.map((comment, idx) => (\r\n              <SingleComment key={idx} comment={comment} />\r\n            ))}\r\n\r\n            {/* comment form with input field */}\r\n            <form onSubmit={handleCommentSubmit}>\r\n              <div className={classes.commentContainer}>\r\n                <TextField\r\n                  autoFocus\r\n                  multiline\r\n                  label=\"Leave a comment\"\r\n                  type=\"text\"\r\n                  name=\"comment\"\r\n                  rowsMax=\"4\"\r\n                  className={classes.commentInput}\r\n                  id=\"input-comment\"\r\n                  onChange={handleInputChange}\r\n                  value={commentInput}\r\n                />\r\n                <IconButton type=\"submit\" aria-label=\"submit\">\r\n                  <Send />\r\n                </IconButton>\r\n              </div>\r\n            </form>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\ninterface LinkStateProps {\r\n  isAuthenticated: boolean;\r\n  user: User;\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  updatePostRating: (postData: { _id: string; rating: number }) => void;\r\n  deletePost: (postId: string) => void;\r\n  addComment: (commentData: Comment) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): LinkStateProps => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n  user: state.user.user,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  updatePostRating: bindActionCreators(updatePostRating, dispatch),\r\n  deletePost: bindActionCreators(deletePost, dispatch),\r\n  addComment: bindActionCreators(addComment, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);\r\n","import React from \"react\";\r\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  load: {\r\n    width: \"100%\",\r\n    marginTop: 75,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loadIcon: {\r\n    color: \"#3F51B5\",\r\n  },\r\n});\r\n\r\nconst LoadingPosts = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.load}>\r\n      <CircularProgress className={classes.loadIcon} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPosts;\r\n","import React, { useEffect } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport SinglePost from \"./Post\";\r\nimport LoadingPosts from \"./LoadingPosts\";\r\n\r\nimport { getPosts, getPostsByFollowedUsers } from \"../../actions/postActions\";\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nimport { Post } from \"../../types/Post\";\r\nimport { AppActions } from \"../../types/actions\";\r\n\r\ninterface ListPostsProps {\r\n  allPosts: boolean;\r\n}\r\n\r\ntype Props = ListPostsProps & LinkStateProps & LinkDispatchProps;\r\n\r\nconst ListPosts: React.FC<Props> = ({\r\n  posts,\r\n  loading,\r\n  allPosts,\r\n  getPosts,\r\n  getPostsByFollowedUsers,\r\n}) => {\r\n  useEffect(() => {\r\n    allPosts ? getPosts() : getPostsByFollowedUsers();\r\n  }, [allPosts, getPosts, getPostsByFollowedUsers]);\r\n\r\n  const items = posts.map((post) => <SinglePost key={post._id} post={post} />);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <LoadingPosts />\r\n      ) : (\r\n        <Grid container justify=\"space-evenly\" spacing={3}>\r\n          {items}\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface LinkStateProps {\r\n  posts: Post[];\r\n  loading: boolean;\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  getPosts: () => void;\r\n  getPostsByFollowedUsers: () => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): LinkStateProps => ({\r\n  posts: state.post.posts,\r\n  loading: state.post.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  getPosts: bindActionCreators(getPosts, dispatch),\r\n  getPostsByFollowedUsers: bindActionCreators(\r\n    getPostsByFollowedUsers,\r\n    dispatch\r\n  ),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPosts);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Login from \"../Auth/Login\";\r\nimport ListPosts from \"../Post/ListPosts\";\r\n\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nconst Home: React.FC<{ isAuthenticated: boolean }> = ({ isAuthenticated }) => {\r\n  return <div>{isAuthenticated ? <ListPosts allPosts /> : <Login />}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Login from \"../Auth/Login\";\r\nimport ListPosts from \"../Post/ListPosts\";\r\n\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nconst Followed: React.FC<{ isAuthenticated: boolean }> = ({\r\n  isAuthenticated,\r\n}) => {\r\n  return (\r\n    <div>{isAuthenticated ? <ListPosts allPosts={false} /> : <Login />}</div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Followed);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => (\r\n  <div style={{ textAlign: \"center\", padding: \"25px\" }}>\r\n    <h2>404</h2>\r\n    <h3>Page not found</h3>\r\n    <Link to=\"/image-board/\">Dashboard</Link>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { useState } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { Paper, TextField, Button, makeStyles } from \"@material-ui/core\";\r\n\r\nimport { registerUser } from \"../../actions/userActions\";\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nimport { User } from \"../../types/User\";\r\nimport { Errors } from \"../../types/Error\";\r\nimport { AppActions } from \"../../types/actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    maxWidth: 500,\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    margin: 0,\r\n    color: \"#3F51B5\",\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n    marginBottom: 5,\r\n  },\r\n  btnBlock: {\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\ntype Props = LinkStateProps & LinkDispatchProps;\r\n\r\nconst Register: React.FC<Props> = ({ registerUser, errors }) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [registerInfo, setRegisterInfo] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRegisterInfo({ ...registerInfo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    registerUser(registerInfo, history);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.paper}>\r\n        <h2 className={classes.title}>Register</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            className={classes.textField}\r\n            value={registerInfo.email}\r\n            onChange={handleChange}\r\n            name=\"email\"\r\n            helperText={errors.email ? errors.email : \"\"}\r\n            error={errors.email ? true : false}\r\n          />\r\n          <TextField\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={registerInfo.username}\r\n            onChange={handleChange}\r\n            className={classes.textField}\r\n            helperText={errors.username ? errors.username : \"\"}\r\n            error={errors.username ? true : false}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={registerInfo.password}\r\n            onChange={handleChange}\r\n            className={classes.textField}\r\n            helperText={errors.password ? errors.password : \"\"}\r\n            error={errors.password ? true : false}\r\n          />\r\n          <TextField\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={registerInfo.confirmPassword}\r\n            onChange={handleChange}\r\n            className={classes.textField}\r\n            helperText={errors.confirmPassword ? errors.confirmPassword : \"\"}\r\n            error={errors.confirmPassword ? true : false}\r\n          />\r\n          <div className={classes.btnBlock}>\r\n            <Button variant=\"outlined\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface LinkStateProps {\r\n  errors: Errors;\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  registerUser: (userData: User, history: any) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): LinkStateProps => ({\r\n  errors: state.errors,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  registerUser: bindActionCreators(registerUser, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { useEffect } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { useParams } from \"react-router\";\r\nimport { Paper, Button, Avatar, makeStyles, Grid } from \"@material-ui/core\";\r\n\r\nimport SinglePost from \"../Post/Post\";\r\nimport LoadingPosts from \"../Post/LoadingPosts\";\r\n\r\nimport {\r\n  getProfile,\r\n  followProfile,\r\n  unfollowProfile,\r\n} from \"../../actions/profileActions\";\r\nimport { getPosts } from \"../../actions/postActions\";\r\nimport { AppState } from \"../../store/configureStore\";\r\n\r\nimport { User } from \"../../types/User\";\r\nimport { Post } from \"../../types/Post\";\r\nimport { AppActions } from \"../../types/actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    maxWidth: 500,\r\n    padding: 10,\r\n    margin: \"30px auto\",\r\n  },\r\n  username: {\r\n    display: \"inline-block\",\r\n    marginTop: 0,\r\n    marginLeft: 15,\r\n    color: \"#666\",\r\n  },\r\n  email: {\r\n    color: \"#666\",\r\n    marginBottom: 10,\r\n  },\r\n  detailsBlock: {\r\n    display: \"flex\",\r\n    color: \"#666\",\r\n  },\r\n  detail: {\r\n    marginRight: 10,\r\n    fontWeight: \"bold\",\r\n  },\r\n  detailTitle: {\r\n    marginLeft: 3,\r\n    fontSize: 14,\r\n    fontWeight: \"normal\",\r\n  },\r\n  btnBlock: {\r\n    marginTop: 5,\r\n    marginBottom: 20,\r\n  },\r\n  btnFollow: {\r\n    outline: \"none\",\r\n    backgroundColor: \"#3F51B5\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      color: \"#3F51B5\",\r\n      borderColor: \"#3F51B5\",\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n  loader: {\r\n    alignSelf: \"center\",\r\n  },\r\n  item: {\r\n    flexGrow: 1,\r\n    maxWidth: 800,\r\n  },\r\n});\r\n\r\ntype Props = LinkStateProps & LinkDispatchProps;\r\n\r\nconst Profile: React.FC<Props> = ({\r\n  profile,\r\n  user,\r\n  posts,\r\n  loadingProfile,\r\n  loadingPosts,\r\n  isAuthenticated,\r\n  getProfile,\r\n  getPosts,\r\n  followProfile,\r\n  unfollowProfile,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const { _id } = user;\r\n\r\n  useEffect(() => {\r\n    getPosts(userId);\r\n    getProfile(userId);\r\n  }, [userId, getPosts, getProfile]);\r\n\r\n  const handleFollow = () => {\r\n    userId && followProfile(userId);\r\n  };\r\n\r\n  const handleUnfollow = () => {\r\n    userId && unfollowProfile(userId);\r\n  };\r\n\r\n  let items =\r\n    posts && posts.map((post) => <SinglePost key={post._id} post={post} />);\r\n\r\n  let profileInfo;\r\n\r\n  if (profile && items) {\r\n    const { email, username, followers, following } = profile;\r\n\r\n    let followBtn;\r\n\r\n    if (isAuthenticated) {\r\n      if (_id && followers && !followers.includes(_id)) {\r\n        followBtn = (\r\n          <div className={classes.btnBlock}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className={classes.btnFollow}\r\n              onClick={handleFollow}\r\n            >\r\n              Follow\r\n            </Button>\r\n          </div>\r\n        );\r\n      } else {\r\n        followBtn = (\r\n          <div className={classes.btnBlock}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className={classes.btnFollow}\r\n              onClick={handleUnfollow}\r\n            >\r\n              Unfollow\r\n            </Button>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    profileInfo = (\r\n      <div>\r\n        <Paper className={classes.paper}>\r\n          <Avatar\r\n            alt={username}\r\n            style={{\r\n              display: \"inline-flex\",\r\n              backgroundColor: `#${userId.slice(userId.length - 3)}`,\r\n              padding: 6,\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n            {username?.substr(0, 2)}\r\n          </Avatar>\r\n          <h2 className={classes.username}>{username}</h2>\r\n          {userId !== _id && followBtn}\r\n          <div className={classes.email}>{email}</div>\r\n          <div style={{ height: \"1px\", backgroundColor: \"#999\" }} />\r\n          <div className={classes.detailsBlock}>\r\n            <div className={classes.detail}>\r\n              {items.length}\r\n              <span className={classes.detailTitle}>Posts</span>\r\n            </div>\r\n            <div className={classes.detail}>\r\n              {followers ? followers.length : 0}\r\n              <span className={classes.detailTitle}>Followers</span>\r\n            </div>\r\n            <div className={classes.detail}>\r\n              {following ? following.length : 0}\r\n              <span className={classes.detailTitle}>Following</span>\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      {/* alignItems=\"center\" */}\r\n      <Grid item>{!loadingProfile && profileInfo}</Grid>\r\n      <Grid container justify=\"space-evenly\" alignContent=\"center\" spacing={3}>\r\n        {loadingPosts ? <LoadingPosts /> : items}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\ninterface LinkStateProps {\r\n  profile: User;\r\n  user: User;\r\n  loadingProfile: boolean;\r\n  posts: Post[];\r\n  loadingPosts: boolean;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  getProfile: (userId: string) => void;\r\n  getPosts: (userId: string) => void;\r\n  followProfile: (userId: string) => void;\r\n  unfollowProfile: (userId: string) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): LinkStateProps => ({\r\n  profile: state.profile.user,\r\n  user: state.user.user,\r\n  loadingProfile: state.profile.loading,\r\n  posts: state.post.posts,\r\n  loadingPosts: state.post.loading,\r\n  isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  getProfile: bindActionCreators(getProfile, dispatch),\r\n  getPosts: bindActionCreators(getPosts, dispatch),\r\n  followProfile: bindActionCreators(followProfile, dispatch),\r\n  unfollowProfile: bindActionCreators(unfollowProfile, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div style={{ textAlign: \"center\", padding: \"25px\" }}>\r\n    <h2>User does not exist.</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Main from \"../components/Layout/Main\";\r\nimport Home from \"../components/Routes/Home\";\r\nimport Followed from \"../components/Routes/Followed\";\r\nimport NotFound from \"../components/Routes/NotFound\";\r\nimport Login from \"../components/Auth/Login\";\r\nimport Register from \"../components/Auth/Register\";\r\nimport Profile from \"../components/Profile/Profile\";\r\nimport Search from \"../components/Search/NotFound\";\r\n\r\nconst AppRouter = () => (\r\n  <Router>\r\n    <Main>\r\n      <Switch>\r\n        <Route exact path=\"/image-board/\" component={Home} />\r\n        <Route exact path=\"/image-board/followed\" component={Followed} />\r\n        <Route path=\"/image-board/login\" component={Login} />\r\n        <Route path=\"/image-board/register\" component={Register} />\r\n        <Route path=\"/image-board/profile/:userId\" component={Profile} />\r\n        <Route path=\"/image-board/search\" component={Search} />\r\n        <Redirect exact from=\"/\" to=\"/image-board/\" />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Main>\r\n  </Router>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ConfirmProvider } from \"material-ui-confirm\";\r\n\r\nimport { headers } from \"./utils/useFetch\";\r\nimport { setUser, logoutUser } from \"./actions/userActions\";\r\nimport { store } from \"./store/configureStore\";\r\nimport AppRouter from \"./router\";\r\n\r\n// check for jwt in local storage and authenticate user if jwt is valid\r\nconst jwt = localStorage.getItem(\"jwt\");\r\nif (jwt) {\r\n  const currentTime = Date.now();\r\n  const token = JSON.parse(jwt);\r\n  if (currentTime > token.expiresIn) {\r\n    store.dispatch(logoutUser());\r\n  } else {\r\n    headers.append(\"Authorization\", token.token);\r\n    store.dispatch(setUser());\r\n  }\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConfirmProvider>\r\n        <AppRouter />\r\n      </ConfirmProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./styles.css\";\r\nimport App from \"./App\";\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}